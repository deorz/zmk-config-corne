/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos { compatible = "zmk,combos"; };

    behaviors {
        lh_pht: home_row_left_mod_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LH_PHT";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            tapping-term-ms = <250>;
            quick-tap-ms = <150>;
            flavor = "tap-preferred";
        };

        rh_pht: home_row_right_mod_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "RH_PHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <150>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB  &kp Q               &kp W               &kp E            &kp R                 &kp T        &kp Y    &kp U                  &kp I            &kp O                &kp P                   &kp ESC
&none    &lh_pht LEFT_GUI A  &lh_pht LEFT_ALT S  &lh_pht LCTRL D  &lh_pht LEFT_SHIFT F  &kp G        &kp H    &rh_pht RIGHT_SHIFT J  &rh_pht RCTRL K  &rh_pht RIGHT_ALT L  &rh_pht RIGHT_GUI SEMI  &kp SQT
&mo 2    &kp Z               &kp X               &kp C            &kp V                 &kp B        &kp N    &kp M                  &kp COMMA        &kp DOT              &kp FSLH                &mo 1
                                                 &mo 1            &kp SPACE             &kp ENTER    &kp RET  &kp BACKSPACE          &mo 2
            >;
        };

        symbol_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5    &kp N6          &kp N7      &kp N8      &kp N9            &kp N0             &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp MINUS       &kp EQUAL   &kp TILDE   &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BACKSLASH
&trans  &trans  &trans  &trans  &trans  &trans    &kp UNDERSCORE  &kp PLUS    &kp DOLLAR  &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp AT
                        &trans  &trans  &trans    &trans          &kp DELETE  &trans
            >;
        };

        macro_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp F1      &kp F2             &kp F3           &kp F4                &kp F5                &kp F6          &kp F7      &kp F8    &kp F9  &kp F10    &kp F11  &kp F12
&trans      &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &trans          &kp LEFT    &kp DOWN  &kp UP  &kp RIGHT  &trans   &trans
&bt BT_CLR  &bt BT_SEL 0       &bt BT_SEL 1     &bt BT_SEL 2          &bt BT_SEL 3          &bt BT_SEL 4    &caps_word  &trans    &trans  &trans     &trans   &trans
                                                &trans                &trans                &trans          &trans      &trans    &trans
            >;
        };
    };
};
